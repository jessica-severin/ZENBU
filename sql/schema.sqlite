--
-- Table structure for table assembly
--

CREATE TABLE IF NOT EXISTS assembly (
  assembly_id integer PRIMARY KEY AUTOINCREMENT,
  taxon_id integer default NULL,
  assembly_name varchar(64) default '',
  ncbi_version varchar(32) default '',
  ncbi_assembly_acc varchar(128) default '',
  ucsc_name varchar(32) default '',
  release_date date default NULL,
  taxon_name varchar(255) default '',
  sequence_loaded varchar(1) NOT NULL default '',
  UNIQUE (taxon_id,ncbi_version,ucsc_name)
);

CREATE TABLE IF NOT EXISTS assembly_2_metadata (
  assembly_id integer default NULL,
  metadata_id integer default NULL
);
CREATE INDEX IF NOT EXISTS a2m_aid on assembly_2_metadata (assembly_id);
CREATE INDEX IF NOT EXISTS a2m_mid on assembly_2_metadata (metadata_id);

--
-- Table structure for table chrom
--

CREATE TABLE IF NOT EXISTS chrom (
  chrom_id integer PRIMARY KEY AUTOINCREMENT,
  chrom_name char(64) default NULL,
  assembly_id integer default NULL,
  chrom_length integer default NULL,
  chrom_type char(64) default '',
  ncbi_chrom_name char(64) default '',
  ncbi_chrom_acc char(64) default '',
  refseq_chrom_acc char(64) default '',
  chrom_name_alt1 char(64) default '',
  description char(255) default '',
  UNIQUE (chrom_name,assembly_id)
);

--
-- Table structure for table chrom_chunk
--

CREATE TABLE IF NOT EXISTS chrom_chunk (
  chrom_chunk_id integer PRIMARY KEY AUTOINCREMENT,
  chrom_id integer default NULL,
  chrom_start integer default NULL,
  chrom_end integer default NULL,
  chunk_len integer default NULL,
  UNIQUE (chrom_id,chrom_start,chrom_end)
);
CREATE INDEX IF NOT EXISTS chrom_chunk_chrom_id on chrom_chunk (chrom_id);

--
-- Table structure for table chrom_chunk_seq
--

CREATE TABLE IF NOT EXISTS chrom_chunk_seq (
  chrom_chunk_id integer NOT NULL primary key autoincrement,
  length integer NOT NULL default '0',
  sequence longtext NOT NULL
);

--
-- ------------------------------------------------------------------------------------------------
--

--
-- Table structure for table feature_source
--

CREATE TABLE IF NOT EXISTS feature_source (
  feature_source_id integer PRIMARY KEY AUTOINCREMENT,
  name varchar(255) default NULL,
  category varchar(255) default NULL,
  is_active char(1) NOT NULL default '',
  is_visible char(1) NOT NULL default '',
  import_source varchar(255) default NULL,
  import_date date default NULL,
  feature_count integer default NULL,
  owner_identity text NOT NULL default '',
  last_update timestamp NOT NULL default CURRENT_TIMESTAMP,
  UNIQUE (name)
);

--
-- Table structure for table feature_source_2_metadata
--

CREATE TABLE IF NOT EXISTS feature_source_2_metadata (
  feature_source_id int(11) default NULL,
  metadata_id int(11) default NULL,
  added_by_user_id integer default NULL,
  added_on timestamp NOT NULL default CURRENT_TIMESTAMP,
  deleted_on timestamp default NULL,
  UNIQUE (metadata_id,feature_source_id)
);
CREATE INDEX IF NOT EXISTS fsrc2m_fsrc_id on feature_source_2_metadata (feature_source_id);
CREATE INDEX IF NOT EXISTS fsrc2m_mdata_id on feature_source_2_metadata (metadata_id);

--
-- Table structure for table feature_source_2_symbol
--

CREATE TABLE IF NOT EXISTS feature_source_2_symbol (
  feature_source_id int(11) default NULL,
  symbol_id int(11) default NULL,
  added_by_user_id integer default NULL,
  added_on timestamp NOT NULL default CURRENT_TIMESTAMP,
  deleted_on timestamp default NULL,
  UNIQUE (symbol_id,feature_source_id)
);
CREATE INDEX IF NOT EXISTS fsrc2s_fsrc_id on feature_source_2_symbol (feature_source_id);
CREATE INDEX IF NOT EXISTS fsrc2s_symbol_id on feature_source_2_symbol (symbol_id);

--
-- Table structure for table `feature_source_2_datatype`
--

CREATE TABLE IF NOT EXISTS feature_source_2_datatype (
  feature_source_id int(11) default NULL,
  datatype_id int(11) default NULL,
  UNIQUE (feature_source_id, datatype_id)
);
CREATE INDEX IF NOT EXISTS fsrc2dt_fsrc_id on feature_source_2_datatype (feature_source_id);
CREATE INDEX IF NOT EXISTS fsrc2dt_datatype_id on feature_source_2_datatype (datatype_id);

--
-- Table structure for table feature
--

CREATE TABLE IF NOT EXISTS feature (
  feature_id integer PRIMARY KEY AUTOINCREMENT,
  chrom_id integer default NULL,
  feature_source_id integer NOT NULL default '0',
  chrom_start integer default NULL,
  chrom_end integer default NULL,
  strand char(1) default NULL,
  primary_name char(64) default NULL,
  significance double default '1',
  last_update timestamp NOT NULL default CURRENT_TIMESTAMP
);
CREATE INDEX IF NOT EXISTS feature_chromid on feature(chrom_id);
CREATE INDEX IF NOT EXISTS feature_name on feature(primary_name);
CREATE INDEX IF NOT EXISTS feature_fsid on feature(feature_source_id);

--
-- Table structure for table feature_2_chunk
--

CREATE TABLE IF NOT EXISTS feature_2_chunk (
  feature_id integer default NULL,
  chrom_chunk_id integer default NULL
);
CREATE INDEX IF NOT EXISTS f2c_fid on feature_2_chunk (feature_id);
CREATE INDEX IF NOT EXISTS f2c_ccid on feature_2_chunk (chrom_chunk_id);

--
-- Table structure for table feature_2_metadata
--

CREATE TABLE IF NOT EXISTS feature_2_metadata (
  feature_id integer default NULL,
  metadata_id integer default NULL
);
CREATE INDEX IF NOT EXISTS f2m_fid on feature_2_metadata (feature_id);
CREATE INDEX IF NOT EXISTS f2m_mid on feature_2_metadata (metadata_id);

--
-- Table structure for table feature_2_symbol
--

CREATE TABLE IF NOT EXISTS feature_2_symbol (
  feature_id integer default NULL,
  symbol_id integer default NULL
);
CREATE INDEX IF NOT EXISTS f2s_fid on feature_2_symbol(feature_id);
CREATE INDEX IF NOT EXISTS f2s_sid on feature_2_symbol(symbol_id);

--
-- ------------------------------------------------------------------------------------------------
--

--
-- Table structure for table experiment
--

CREATE TABLE IF NOT EXISTS experiment (
  experiment_id integer PRIMARY KEY AUTOINCREMENT,
  platform varchar(64) default NULL,
  exp_accession varchar(255) default NULL,
  display_name varchar(255) default NULL,
  series_name varchar(255) default '',
  series_point float default NULL,
  is_active char(1) NOT NULL default 'y',
  is_visible char(1) NOT NULL default 'y',
  owner_identity text NOT NULL default '',
  last_update timestamp NOT NULL default CURRENT_TIMESTAMP,
  UNIQUE (exp_accession)
);
CREATE INDEX IF NOT EXISTS experiment_library_name on experiment(exp_accession);

--
-- Table structure for table experiment_2_metadata
--

CREATE TABLE IF NOT EXISTS experiment_2_metadata (
  experiment_id integer default NULL,
  metadata_id integer default NULL,
  added_by_user_id integer default NULL,
  added_on timestamp NOT NULL default CURRENT_TIMESTAMP,
  deleted_on timestamp default NULL,
  UNIQUE (experiment_id,metadata_id)
);
CREATE INDEX IF NOT EXISTS exp2m_expid on experiment_2_metadata(experiment_id);
CREATE INDEX IF NOT EXISTS exp2m_mdid on experiment_2_metadata(metadata_id);

--
-- Table structure for table experiment_2_symbol
--

CREATE TABLE IF NOT EXISTS experiment_2_symbol (
  experiment_id integer default NULL,
  symbol_id integer default NULL,
  added_by_user_id integer default NULL,
  added_on timestamp NOT NULL default CURRENT_TIMESTAMP,
  deleted_on timestamp default NULL,
  UNIQUE (experiment_id,symbol_id)
);
CREATE INDEX IF NOT EXISTS exp2s_expid on experiment_2_symbol(experiment_id);
CREATE INDEX IF NOT EXISTS exp2s_symbol_id on experiment_2_symbol(symbol_id);

--
-- Table structure for table `feature_source_2_datatype`
--

CREATE TABLE IF NOT EXISTS experiment_2_datatype (
  experiment_id int(11) default NULL,
  datatype_id int(11) default NULL,
  UNIQUE (experiment_id, datatype_id)
);
CREATE INDEX IF NOT EXISTS exp2dt_expid       on experiment_2_datatype (experiment_id);
CREATE INDEX IF NOT EXISTS exp2dt_datatype_id on experiment_2_datatype (datatype_id);


--
-- Table structure for table expression
--

CREATE TABLE IF NOT EXISTS expression (
  expression_id integer PRIMARY KEY AUTOINCREMENT,
  experiment_id integer NOT NULL default '0',
  feature_id integer NOT NULL default '0',
  datatype_id integer default NULL,
  value double default NULL,
  sig_error double default NULL
);
CREATE INDEX IF NOT EXISTS expression_fid on expression(feature_id);

--
-- Table structure for table expression_datatype
--

CREATE TABLE IF NOT EXISTS expression_datatype (
  datatype_id integer PRIMARY KEY AUTOINCREMENT,
  datatype char(64) NOT NULL default '',
  UNIQUE(datatype)
);


--
-- ------------------------------------------------------------------------------------------------
--

--
-- Table structure for table edge_source
--

CREATE TABLE IF NOT EXISTS edge_source (
  edge_source_id integer PRIMARY KEY AUTOINCREMENT,
  name varchar(255) default NULL,
  display_name varchar(255) default NULL,
  category varchar(255) default NULL,
  classification varchar(64) default NULL,
  is_active char(1) NOT NULL default 'y',
  is_visible char(1) NOT NULL default 'y',
  create_date date default NULL,
  featuresource1 varchar(255)  default NULL,
  featuresource2 varchar(255)  default NULL,
  edge_count integer default NULL,
  owner_identity text NOT NULL default '',
  last_update timestamp NOT NULL default CURRENT_TIMESTAMP,
  UNIQUE (name)
);


--
-- Table structure for table edge_source_2_metadata
--

CREATE TABLE IF NOT EXISTS edge_source_2_metadata (
  edge_source_id integer default NULL,
  metadata_id integer default NULL,
  added_by_user_id integer default NULL,
  added_on timestamp NOT NULL default CURRENT_TIMESTAMP,
  deleted_on timestamp default NULL,
  UNIQUE (edge_source_id,metadata_id)
);
CREATE INDEX IF NOT EXISTS esrc2m_esrc_id on edge_source_2_metadata(edge_source_id);
CREATE INDEX IF NOT EXISTS esrc2m_mdata_id on edge_source_2_metadata(metadata_id);

--
-- Table structure for table edge_source_2_symbol
--

CREATE TABLE IF NOT EXISTS edge_source_2_symbol (
  edge_source_id integer default NULL,
  symbol_id integer default NULL,
  added_by_user_id integer default NULL,
  added_on timestamp NOT NULL default CURRENT_TIMESTAMP,
  deleted_on timestamp default NULL,
  UNIQUE (edge_source_id,symbol_id)
);
CREATE INDEX IF NOT EXISTS esrc2s_esrc_id on edge_source_2_symbol(edge_source_id);
CREATE INDEX IF NOT EXISTS esrc2m_symbol_id on edge_source_2_symbol(symbol_id);

--
-- Table structure for table edge
--

CREATE TABLE IF NOT EXISTS edge (
  edge_id integer PRIMARY KEY AUTOINCREMENT,
  edge_source_id integer default NULL,
  feature1_id integer default NULL,
  feature2_id integer default NULL,
  direction char(1) default NULL,
  sub_type char(16) default NULL,
  weight float default NULL
);
CREATE INDEX IF NOT EXISTS edge_f1 on edge(feature1_id);
CREATE INDEX IF NOT EXISTS edge_f2 on edge(feature2_id);
CREATE INDEX IF NOT EXISTS edge_srcid on edge(edge_source_id);

--
-- Table structure for table edge_2_metadata
--

CREATE TABLE IF NOT EXISTS edge_2_metadata (
  edge_id integer default NULL,
  metadata_id integer default NULL
);
CREATE INDEX IF NOT EXISTS e2m_edge_id on edge_2_metadata(edge_id);
CREATE INDEX IF NOT EXISTS e2m_mdata_id on edge_2_metadata(metadata_id);

--
-- Table structure for table edge_2_symbol
--

CREATE TABLE IF NOT EXISTS edge_2_symbol (
  edge_id integer default NULL,
  symbol_id integer default NULL
);
CREATE INDEX IF NOT EXISTS e2s_edge_id on edge_2_symbol(edge_id);
CREATE INDEX IF NOT EXISTS e2s_symbol_id on edge_2_symbol(symbol_id);



--
-- ------------------------------------------------------------------------------------------------
--

--
-- Table structure for table peer
--

CREATE TABLE IF NOT EXISTS peer (
  uuid varchar(255) NOT NULL default '',
  alias varchar(255) NOT NULL default '',
  is_self tinyint(1) default '0',
  db_url varchar(255) default NULL,
  web_url varchar(255) default NULL,
  PRIMARY KEY  (uuid)
);

--
-- Table structure for table metadata
--

CREATE TABLE IF NOT EXISTS metadata (
  metadata_id integer PRIMARY KEY AUTOINCREMENT,
  data_type varchar(255) default NULL,
  data mediumtext 
);
CREATE INDEX IF NOT EXISTS metadata_type on metadata (data_type);
CREATE INDEX IF NOT EXISTS metadata_data on metadata (data);

--
--
-- Table structure for table symbol
--

CREATE TABLE IF NOT EXISTS symbol (
  symbol_id integer PRIMARY KEY AUTOINCREMENT,
  sym_type char(32) default NULL,
  sym_value char(255) default NULL,
  UNIQUE (sym_type,sym_value)
);
CREATE INDEX IF NOT EXISTS symbol_type on symbol (sym_type);
CREATE INDEX IF NOT EXISTS symbol_value on symbol (sym_value);


--
-- Table structure for table taxon
--

CREATE TABLE IF NOT EXISTS taxon (
  taxon_id integer NOT NULL default '0',
  genus varchar(50) default NULL,
  species varchar(50) default NULL,
  sub_species varchar(50) default NULL,
  common_name varchar(100) default NULL,
  classification mediumtext,
  PRIMARY KEY  (taxon_id)
); 
CREATE INDEX IF NOT EXISTS taxon_genus on taxon (genus,species);
CREATE INDEX IF NOT EXISTS taxon_cname on taxon (common_name);

--
-- Table structure for table tissue
--

CREATE TABLE IF NOT EXISTS tissue (
  tissue_id integer PRIMARY KEY AUTOINCREMENT,
  emap_id integer NOT NULL default '0',
  tissue_name varchar(128) default NULL,
  public_name varchar(128) default NULL
);

--
-- ------------------------------------------------------------------------------------------------
--

--
-- Table structure for table collaboration
--

CREATE TABLE IF NOT EXISTS collaboration (
  collaboration_id integer PRIMARY KEY AUTOINCREMENT,
  display_name varchar(255) NOT NULL default '',
  uuid varchar(48) NOT NULL default '',
  owner_user_id integer NOT NULL,
  owner_openid text NOT NULL default '',
  public_announce char(1) NOT NULL default '',
  open_to_public char(1) NOT NULL default '',
  UNIQUE (uuid)
);
CREATE INDEX IF NOT EXISTS collab_openid on collaboration (owner_openid);

--
-- Table structure for table collaboration_2_metadata
--

CREATE TABLE IF NOT EXISTS collaboration_2_metadata (
  collaboration_id integer default NULL,
  metadata_id integer default NULL,
  UNIQUE (collaboration_id,metadata_id)
);
CREATE INDEX IF NOT EXISTS collab2m_collab_id on collaboration_2_metadata(collaboration_id);
CREATE INDEX IF NOT EXISTS collab2m_metadata_id on collaboration_2_metadata(metadata_id);

--
-- Table structure for table collaboration_2_symbol
--

CREATE TABLE IF NOT EXISTS collaboration_2_symbol (
  collaboration_id integer default NULL,
  symbol_id integer default NULL,
  UNIQUE (collaboration_id,symbol_id)
);
CREATE INDEX IF NOT EXISTS collab2s_collab_id on collaboration_2_symbol(collaboration_id);
CREATE INDEX IF NOT EXISTS collab2s_symbol_id on collaboration_2_symbol(symbol_id);

--
-- Table structure for table collaboration_2_user
--

CREATE TABLE IF NOT EXISTS collaboration_2_user (
  collaboration_id integer default NULL,
  user_id integer default NULL,
  member_status char(16) NOT NULL DEFAULT "REQUEST",  --enum('REQUEST','MEMBER','REJECTED','INACTIVE','INVITED')
  PRIMARY KEY (collaboration_id,user_id)
);


--
-- Table structure for table user
--

CREATE TABLE IF NOT EXISTS user (
  user_id integer PRIMARY KEY AUTOINCREMENT,
  openID text NOT NULL,
  email_address text NOT NULL default '',
  nickname varchar(255) NOT NULL default ''
);

--
-- Table structure for table user_2_metadata
--

CREATE TABLE IF NOT EXISTS user_2_metadata (
  user_id integer default NULL,
  metadata_id integer default NULL,
  UNIQUE (user_id,metadata_id)
);
CREATE INDEX IF NOT EXISTS user2m_user_id on user_2_metadata(user_id);
CREATE INDEX IF NOT EXISTS user2m_metadata_id on user_2_metadata(metadata_id);

--
-- Table structure for table user_2_symbol
--

CREATE TABLE IF NOT EXISTS user_2_symbol (
  user_id integer default NULL,
  symbol_id integer default NULL,
  UNIQUE (user_id,symbol_id)
);
CREATE INDEX IF NOT EXISTS user2s_user_id on user_2_symbol(user_id);
CREATE INDEX IF NOT EXISTS user2s_symbol_id on user_2_symbol(symbol_id);

